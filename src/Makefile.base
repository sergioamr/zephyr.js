JERRY_BASE ?= $(ZJS_BASE)/deps/jerryscript

export LDFLAGS += -u _printf_float

ccflags-y += -Wall -Werror

# Select extended ANSI C/POSIX function set in recent Newlib versions
ccflags-y += -D_XOPEN_SOURCE=700

ccflags-y += -I$(JERRY_BASE)/jerry-core
ccflags-y += -I$(ZEPHYR_BASE)/drivers
ccflags-y += -I$(ZJS_BASE)/outdir/include

ifeq ($(VARIANT), debug)
ccflags-y += -DDEBUG_BUILD
ccflags-y += -g
endif

ifeq ($(BOARD), qemu_x86)
ccflags-y += -DQEMU_BUILD
endif

ifeq ($(CB_STATS), on)
ccflags-y += -DZJS_PRINT_CALLBACK_STATS
endif

obj-y += main.o \
         zjs_ble.o \
         zjs_buffer.o \
         zjs_callbacks.o \
         zjs_console.o \
         zjs_event.o \
         zjs_gpio.o \
         zjs_modules.o \
         zjs_performance.o \
         zjs_promise.o \
         zjs_pwm.o \
         zjs_script.o \
         zjs_script_gen.o \
         zjs_timers.o \
         zjs_uart.o \
         zjs_util.o

# skip for now for frdm_k64f
ifneq ($(BOARD), frdm_k64f)
obj-y += zjs_aio.o \
         zjs_i2c.o \
         zjs_grove_lcd.o
endif

obj-$(CONFIG_BOARD_ARDUINO_101) += \
	zjs_a101_pins.o \
	zjs_ipm.o

obj-$(CONFIG_BOARD_FRDM_K64F) += \
	zjs_k64f_pins.o

ifeq ($(DEV), ashell)
$(info Insecure Mode (development))
ccflags-y += -DBUILD_MODULE_GPIO -DBUILD_MODULE_PWM
# -DBUILD_MODULE_UART -DBUILD_MODULE_BLE
ccflags-y += -DBUILD_MODULE_AIO -DBUILD_MODULE_A101
ccflags-y += -DBUILD_MODULE_TIMER -DBUILD_MODULE_BUFFER
ccflags-y += -DBUILD_MODULE_GROVE_LCD -DBUILD_MODULE_I2C
export JERRY_INCLUDE = $(JERRY_BASE)/jerry-core/
obj-y += ashell/
endif
